apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        // gradle自身资源库
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    maven { //第三方jar包
        url "${nexusUrl}/content/repositories/thirdparty"
    }
    maven { // 私服，仓库使用JCenter 远程库
        url "${nexusUrl}/content/repositories/jcenter"
    }
    mavenCentral()
}

// 定义java路径也为静态资源路径，才能加载mapper中的xml文件
sourceSets.main.resources.srcDirs = ["src/main/java","src/main/resources"]

// 自动生成器
configurations {
    mybatisGenerator
}

dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'org.oracle:ojdbc:11.2.0.2.0'
    mybatisGenerator 'tk.mybatis:mapper:3.3.1'
}

// mybatis 实体自动生成器
task mybatisGenerator << {
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true)
}

// 将java目录里的xml文件拷贝到打包里
//task mapperXmlCopy(type: Copy) {
//    copy {
//        from("src/main/java") {
//            include("**/mapper/*.xml")
//        }
//        into("${buildDir}/classes/java/main")
//    }
//}